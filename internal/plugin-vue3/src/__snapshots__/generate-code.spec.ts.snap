// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should generate compiled SFC 1`] = `
"import { setup } from "/path/to/setup.ts";

import { defineComponent } from "vue";

const exampleComponent = defineComponent({
    name: "MockExample",
    props: {
        name: {
            type: String,
            required: true,
        },
    },
});


import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from "vue"

const _hoisted_1 = { class: "greeting" }

export function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (_openBlock(), _createElementBlock("p", _hoisted_1, "Hello " + _toDisplayString(_ctx.name) + "!", 1 /* TEXT */))
}

exampleComponent.render = render;

setup({
  rootComponent: exampleComponent,
  selector: "#example-d661fd"
});
"
`;

exports[`should generate markup 1`] = `
"
        <div id="example-a92dca"></div>
        <!-- [html-validate-disable-next element-permitted-content -- technical debt, should be inserted into <head>] -->
        <style>
            
.greeting {
    color: red;
}

        </style>
        <!-- [html-validate-disable-next require-sri -- technical debt, should generate integrity but we don't know the hash of the compiled file yet] -->
        <script type="module" src="./mock-example-a92dca.js"></script>
    "
`;

exports[`should handle missing <script> 1`] = `
"import { setup } from "/path/to/setup.ts";
const exampleComponent = {};

import { openBlock as _openBlock, createElementBlock as _createElementBlock } from "vue"

const _hoisted_1 = { class: "greeting" }

export function render(_ctx, _cache) {
  return (_openBlock(), _createElementBlock("p", _hoisted_1, "Hello World!"))
}

exampleComponent.render = render;

setup({
  rootComponent: exampleComponent,
  selector: "#example-1877f3"
});
"
`;
